{"version":"https:\/\/jsonfeed.org\/version\/1","title":"Your blog name","home_page_url":"https:\/\/yoursiteurl.com\/","feed_url":"http:\/\/www.yoursiteurl.com\/blog","author":{"url":"link to your social media","name":"Your Name"},"items":[{"title":"How does a computer know what to do next?","date_published":"2019-01-15","date_modified":"2019-01-15","id":"http:\/\/sparvk.workrock.in\/home\/how-does-a-computer-know-what-to-do-next","url":"http:\/\/sparvk.workrock.in\/home\/how-does-a-computer-know-what-to-do-next","author":{"name":"Your Name"},"content_html":"\n<p>A computer is a programmed machine that runs through the sequence of its instruction set. If the <a href=\"\/home\/what-happens-when-you-turn-on-your-computer\">instruction is to boot<\/a> the machine turns on. If the instruction is to launch an application it launches an application. If the instruction is to learn the machine learns. <\/p>\n<p>This instruction set, usually called a program, is put on an electronic device called computer memory.  Depending upon the type of storage needed there are different types of memories<\/p>\n<ul>\n<li>A ROM is a permanent Read Only Memory that can retain data even after the power is turned off<\/li>\n<li>A RAM is a temporary Random Access Storage that looses all of its data as soon as the power is turned off<\/li>\n<li>A hard disk drive is a permanent storage device that can both read and write data. <\/li>\n<\/ul>\n<p>To execute its programs a computer needs to find a way to access it first.  For different types of programs there are different <a href=\"\/home\/what-is-hard-drive-partitioning\">access strategies<\/a>.  A program running on a computer however has little understanding of how its instructions will actually be run. In other words the details of a program execution are abstracted from the program . This abstraction is called an operating system. <\/p>\n<p>All running computers  have a supervisor application running in the background (again an operating system) that determines how all of the other programs are going to be run. <\/p>\n<p><strong>So?<\/strong> <\/p>\n<p>When a computer executes the set of instructions it becomes what is called a state machine. A state machine is simply a device that moves from one state to another when certain input is applied to it. Consider the following scenario as an example. <\/p>\n<ol>\n<li>You press the power button on your computer<\/li>\n<li>The computer changes state from a machine at rest to a running system.    <\/li>\n<\/ol>\n<p>Now consider a computer that is already turned on and run through the following steps:- <\/p>\n<ol>\n<li>You click to open a web browser<\/li>\n<li>The browser window opens waiting for you to navigate to a website. <\/li>\n<\/ol>\n<p>In the first case the computer itself changes state from a machine at rest to a running system. In the second case an application changes state from being a program at rest to a running program.  <\/p>\n<p>Your entire session on a computer is basically a series of state changes. A movement of applications and programs from one state to another. <\/p>\n<p><strong>So?<\/strong> <\/p>\n<p>With that definition we can try to understand what a computer is.  A very simple definition -- a computer is simply an electronic state machine with devices that change the state of its programs. But if all computer did was to transition from a series of predefined states it would be pretty much useless. Imagine how lame it would be if your browser could only navigate one website? Or if your word processor could only edit a single document? <\/p>\n<p>A computer is useful because it moves through not only predefined states but also user defined states. An example of a predefined state is the boot sequence. All you have to do to turn on the computer is to press the power button. The rest it does on its own. <\/p>\n<p>An example of a user defined state machine could be <a href=\"\/home\/templatizing-files-and-directories-in-sparvk-pod\">your resume<\/a> present in your documents directory. When you click to open your resume it starts a document  processor , then it loads the contents on your file making it ready for editing. In this example the state of the document processor is stored in a file which is in turn stored on the hard disk.    <\/p>\n<p>As a user you create countless state machines that are executed on your behalf. In most programs these states are grouped under \"settings\" that can be tweaked.  So that when a program starts it looks for these settings and loads them up to launch an environment that you prefer. <\/p>\n<p><img alt=\"sun bathing\" src=\"\/images\/0\/5\/8\/2\/7\/05827c55a910d8cef750bc412c639c1937fa43aa-lizard-804114960720.jpeg\" \/><\/p>\n<p><strong>Oh!<\/strong><\/p>\n<p>Yeah!<\/p>\n<p>sparvk is a portable distribution of open source operating systems that allow you to save your states in a detachable storage medium that can be plugged it inside any computer to start your session right where you left it off. Giving each one of your machines multiple dimensions.   <\/p>\n<h1>Try it you'll like it<\/h1>"},{"title":"The sd card report","date_published":"2019-01-06","date_modified":"2019-01-06","id":"http:\/\/sparvk.workrock.in\/home\/the-sd-card-report","url":"http:\/\/sparvk.workrock.in\/home\/the-sd-card-report","author":{"name":"Your Name"},"content_html":"\n<p>USB drives are not the only secondary storage medium in the market.  Alternatives like secure disk cards are quite popular. If you use a smart phone you are probably already  using a micro sd card. You\u2019d also be using an SD card if you own let us say a digital camera or maybe a smart TV. Although sd cards were initially designed to provide a compact form of storage in smaller devices these days the SD card slot is pretty common even in laptops and desktops. <\/p>\n<p>In the last couple of posts we\u2019ve discussed at length how you can switch boot devices to load a completely different operating system. <\/p>\n<p>SD cards seem like an ideal candidate as a secondary boot device. Its the cheapest form of storage. It is universally accepted. It is smaller than a pendrive and its just as fast, practically speaking. You probably have a couple of  spare cards available right now. Device manufacturers are pushing it as a secondary form of storage. In some IOT devices an sd  card is the primary storage medium. <\/p>\n<p>But can you boot through an SD card slot on your laptop? Lets find out.  <\/p>\n<p>Booting through an SD card slot first of all requires a bootable SD card. Since an sd card is just another form of storage making it bootable is not all that tricky. All we have to do is create the right partitions for the <a href=\"\/home\/what-happens-when-you-turn-on-your-computer\">bootloader<\/a> to be loaded and then for it to find the operating system kernel. So far so good.<\/p>\n<p>But whether or not you can boot from the sd card slot is an entirely different matter. You\u2019ll recall that <a href=\"\/home\/what-is-hard-drive-partitioning\">the booting process<\/a> requires intervention from hardware manufacturers\u2019 BIOS firmware and operating system\u2019s bootloader. Both BIOS and bootloader usually have a predefined set of boot devices that they recognize. These devices are <\/p>\n<ol>\n<li>The hard disk of your machine<\/li>\n<li>The cd\/dvd rom<\/li>\n<li>The floppy disk<\/li>\n<li>The usb drive<\/li>\n<li>The network <\/li>\n<\/ol>\n<p>Although internally most SD card readers on the laptop function the same as a usb bus but not all BIOS  recognize them as a boot device. <\/p>\n<p>Modern computers however have been more accepting of SD card reader as a boot device but there is no way to tell with 100% certainty whether your device supports this option. The only way is to inspect the options in your BIOS menu. <\/p>\n<p><img alt=\"aint that a kick in the head\" src=\"\/images\/b\/3\/0\/4\/3\/b3043ec715350cb3ae5fc8eafa0b3202e290ba97-animals-3901900960720.jpeg\" \/><\/p>\n<p><strong>So what is a reliable way to boot from sd cards? <\/strong><\/p>\n<p>While it would have been really cool to boot directly from the sd card reader on your machine a 100% guaranteed solution would be to purchase an SD to usb adapter (you can find it really cheap online) and then boot an SD card like you\u2019d a USB. It is not ideal but it works for sure. <\/p>\n<p>Sparvk portable operating system distribution can be loaded on a card of your choice to make it bootable. That way you can have multiple operating systems cards waiting to be deployed on your machine.<\/p>\n<h1>Try it you\u2019ll like it<\/h1>"},{"title":"The boot order","date_published":"2019-01-04","date_modified":"2019-01-04","id":"http:\/\/sparvk.workrock.in\/home\/the-boot-order","url":"http:\/\/sparvk.workrock.in\/home\/the-boot-order","author":{"name":"Your Name"},"content_html":"\n<p>As we saw in the last post the <a href=\"\/home\/what-happens-when-you-turn-on-your-computer\">boot process<\/a> is a series of steps that change the state of your computer from a system at rest to a running machine that can do real work. <\/p>\n<p>Now one of the steps in this boot process is to find the actual boot device. To clarify the boot device is a storage medium on which your bootloader and operating system files are located. To further clarify a boot device is different from the BIOS firmware unit that comes installed on the hardware. <\/p>\n<p>For most computers this default boot device is the hard disk. And on majority of computers the hard disk contains an operating system image (usually paid for by the manufacturer) which means that you almost never have to worry about the boot order of your devices. If however you want to install a new operating system on your computer or you have to replace your existing hard drive due to a failure it becomes important to understand how a boot device is chosen by a BIOS. <\/p>\n<p>Well first of all BIOS recognizes multiple boot devices. It can boot from a cd\/dvd drive. It can boot from a storage medium attached to a usb whether that is a pendrive or an external hard disk. It can also boot over a network that is the BIOS can download files from a connected remote machine and run it locally. It used to even boot from the floppy drive but since floppies disks are no longer manufactured this feature is mostly useless.      <\/p>\n<p>Although it can boot from multiple devices at any give time only one device can be used. It may boot from a <a href=\"\/home\/what-is-hard-drive-partitioning\">hard disk<\/a> or it may boot from a usb drive. But not from both of them at the same time. <\/p>\n<p>But what happens when you have multiple boot devices present on a system. Consider for example a case when computer with a built in hard disk a DVD ROM and a plugged in pendrive is turned on? How would the BIOS determine on which device the OS files are located? <\/p>\n<p>By simply looking into each of these devices on by one until it finds a booloader. It does not sound very effective but its really quick and works well and considering you can have only a finite number of boot devices on computer normally there is hardly a reason to change this approach. But then the question arises in which device the BIOS looks first? <\/p>\n<p>Well that is determined by the boot order in your BIOS. In your BIOS you can give priority to different devices. For example you can instruct your BIOS to first try accessing the bootloader from the DVD ROM and if that fails try the hard disk. Or from the USB device or any another order that you can think of.      <\/p>\n<p>But the boot order feature is more of an \"automated bootloader selection \" ( or ABS for short) from a boot device. Most computers allow you to override this boot device selection process altogether by manually specifying the device to load from at the time of startup. <\/p>\n<p>Pressing a certain key eg esc or del ( it's different for each computer) at the time of boot brings up a device selection menu which lists down all the devices on which bootloader is present. You can then choose which one you want to load your os from. <\/p>\n<p><img alt=\"thats the way I like it\" src=\"\/images\/4\/2\/0\/c\/3\/420c368be6ababda4e4aabae51a32500f949a8af-sheep-3727049960720.jpeg\" \/><\/p>\n<p>As a user you have a lot of flexibility to choose from various operating systems. sparvk  pods are portable distributions of opensource operating systems that allow you to exercise that choice by providing you with ready made os for suited for different occasions. All you have to do is plug in the usb stick and choose to boot from it at the time of startup. <\/p>\n<h1>Try it you\u2019ll like it<\/h1>"},{"title":"What is hard drive partitioning?","date_published":"2018-12-28","date_modified":"2018-12-28","id":"http:\/\/sparvk.workrock.in\/home\/what-is-hard-drive-partitioning","url":"http:\/\/sparvk.workrock.in\/home\/what-is-hard-drive-partitioning","author":{"name":"Your Name"},"content_html":"\n<p>As we talked about in our last article <a href=\"\/home\/what-happens-when-you-turn-on-your-computer\">booting a computer<\/a> is a very straightforward process. So simple in-fact that most of the time you don\u2019t even realize that its happening. All you do is press the power button and up comes the screen. <\/p>\n<p>When you press that power button you set in motion a series of events. First the OEM installed BIOS makes the hardware components available to a computer. The device then tries to find a bootloader on a disk (either a hard disk or an external device like usb). Once the bootloader is found, the os kernel is loaded and it starts system services followed by user defined services to make the system run.  <\/p>\n<p>All of this happens in a sequence. First the BIOS, then the bootloader and then the kernel access the storage device. Most of the time that storage device is the hard disk. This means that there must be a way for the BIOS to find the bootloader on the attached disk and for the bootloader to find the kernel files. <\/p>\n<p>As a user however you have a very different view of the storage. You don\u2019t really consider or care about system files and directories. All you think about is the location of your files. Most operating systems present the file system to the user as a hierarchy of directories. <\/p>\n<p>The \u201chome\u201d directory is the one you interact with. In reality it is simply a part of larger system of root directory that contains not only the user files but also system files. Now  summarizing what we\u2019ve discussed so far. <\/p>\n<ol>\n<li>We need a place on the hard disk where the BIOS can find the bootloader.<\/li>\n<li>We need a place on the hard disk where the operating system kernel files can be stored.<\/li>\n<li>We need a place on the hard disk where your files can be stored.<\/li>\n<\/ol>\n<p>We have a problem. There is only one disk and there we have placed on it so many different responsibilities. No way can it fulfill all of these demands unless we find a way to compartmentalize the requirements. <\/p>\n<p><img alt=\"bird is the word\" src=\"\/images\/c\/0\/5\/9\/3\/c05931c0b87b524e4bdefda946f60b48524cab69-hahn-3741129960720.jpeg\" \/><\/p>\n<p>Partitioning is this compartmentalizing of the hard disk to serve different purposes at different stages of a system lifecycle. <\/p>\n<ul>\n<li>When a computer is in a  POST state the BIOS finds the bootloader usually in a vfat \/ fat partition.  <\/li>\n<li>When a computer is in a startup state the kernel finds the system files usually in an ext4\/ntfs partition<\/li>\n<li>When a computer is in a running state the user finds his files on the filesystem (again usually ext4\/ntfs partition)<\/li>\n<\/ul>\n<p>Additionally on most operating systems another partition is created to hold the swap data. Swap is basically a temporary place reserved for applications to use when they run out of RAM. <\/p>\n<p>Whether the device is an internal disk or an attached storage (via a usb port) it follows the same partitioning structure. This is why you can direct your BIOS to load the operating system from a usb drive without affecting the internal disk. <\/p>\n<h1>Ain\u2019t it cool?<\/h1>"},{"title":"Managing your photos with sparvk pods","date_published":"2018-12-27","date_modified":"2018-12-27","id":"http:\/\/sparvk.workrock.in\/home\/managing-your-photos-with-sparvk-pods","url":"http:\/\/sparvk.workrock.in\/home\/managing-your-photos-with-sparvk-pods","author":{"name":"Your Name"},"content_html":"\n<p>sparvk provides you with various tools to help you manage your photographs. At the file level it enables you to arrange all your photos in directories. By default sparvk comes with a Pictures directory. As the name suggests the Pictures directory is meant to function as your digital photo album. Here you can create subdirectories to file your photos in multiple albums. For example there can be a family album that keeps all the photos of your family members. There can be a  holiday album keeping all your holiday pictures in one place.  <\/p>\n<p>The Pictures directory is accessible from the computer tab in the applications menu.  Now if you'd like to backup all your images on the cloud there is always an option of <a href=\"\/home\/remote-file-management-and-backup-with-sparvk\">connecting your directory<\/a> to a network server. This way you get to access all your remote files from the comfort of your desktop.<\/p>\n<p><img alt=\"Backup your photos on sparvk enabled desktop\" src=\"\/user\/pages\/01.home\/managing-your-photos-with-sparvk-pods\/picture_preview.png\" \/><\/p>\n<p><em>Note how all the directories are kept organized to provide you with an <a href=\"\/home\/an-uncluttered-desktop-experience\">uncluttered desktop experience<\/a>) <\/em> <\/p>\n<p><strong>Viewing and editing images<\/strong><\/p>\n<p>Of course you backup your photos only because you want to check them out later. Sparvk pods comes with a photo viewer application that allows you to <\/p>\n<p><img alt=\"showcase your photography\" src=\"\/user\/pages\/01.home\/managing-your-photos-with-sparvk-pods\/gwenview.png\" \/><\/p>\n<ol>\n<li>Slideshow though your photos in full screen. So you can use the application to present your photographs  <\/li>\n<li>Tag and rate your photos. Add a description to each of your images so you remember the story behind your photos. <\/li>\n<li>Rotate resize and flip images. View the exif data associated with each image. Move images around in files and folders in a graphical view. <\/li>\n<\/ol>\n<p>For a more feature rich image management program install darktable. <\/p>\n<ol>\n<li>Open up terminal on your machine. <\/li>\n<li>switch to root by typing su on the terminal and pressing enter. You'll be prompted for your password. <\/li>\n<li>Type sudo apt-get install darktable and press enter. <\/li>\n<\/ol>\n<p><img alt=\"opensource image management\" src=\"\/images\/a\/5\/d\/0\/8\/a5d08d0cc5bef55fbe129caf72fdffb29a233012-darktable.png\" \/><\/p>\n<p>This will install darktable on your sparvk pod and you should be able to find in from the applications menu. Besides all of the features we mentioned above darktable also allows you to crop and filter your images. Apply effects on them. Pick colors from any spot on the image map. Darktable is a fairly advanced tool that comes with two modes of operation. <\/p>\n<ol>\n<li>The darkroom that allows you to add effects to your imges<\/li>\n<li>The light table which is basically an image manager. <\/li>\n<\/ol>\n<p>For serious photographers dark table can prove to be an invaluable tool.  <\/p>\n<p>sparvk pod comes with many more applications that you can install to allow rich image editing but as far as basic image management is concerned the default applications will be more than enough. <\/p>\n<h1>Try it you'll like it<\/h1>"},{"title":"What happens when you turn on your computer?","date_published":"2018-12-27","date_modified":"2018-12-27","id":"http:\/\/sparvk.workrock.in\/home\/what-happens-when-you-turn-on-your-computer","url":"http:\/\/sparvk.workrock.in\/home\/what-happens-when-you-turn-on-your-computer","author":{"name":"Your Name"},"content_html":"\n<p>When you press the power button on your computer it starts a series process collectively known as booting. Initially only a part of ROM storage is accessible to the computer. A small firmware program (BIOS) located on the ROM runs to perform a POST (power on self test) preparing the computer to access other parts of its hardware like ram and hard disk. <\/p>\n<p>Following the POST setup a \"bootstrap\" loader is invoked to load the operating system kernel. The operating system kernel in turn runs a series of programs and services that allow you to use the computer hardware in the most effective manner. The kernel is, for example , responsible for starting network services, services needed to render the user interface, programs that manage user sessions and a bunch of background utility services. These utility services are often called system services because they are essential for your computer to work. <\/p>\n<p>Most operating systems also allow you to define services that can be started during the boot time.  When you do this the kernel finds a list of user created services on the hard disk and instructs them to start , once the essential system services are up and running. While system services are necessary for the OS to run, user defined services are simply a convenient way to perform operations that might otherwise need to be started manually.  <\/p>\n<p>The boot time, that is the time it takes for your computer to start after its switched on usually depends on how long it takes for your computer to start the system services as well as the user defined services on your machine.    <\/p>\n<p><img alt=\"learn to fly\" src=\"\/user\/pages\/01.home\/what-happens-when-you-turn-on-your-computer\/aircraft-2795557_960_720.jpg\" \/><\/p>\n<p>The firmware that starts the loading of operating system kernel is usually provided by the Original equipment manufacturer (OEM for short). Sometimes the OEM would also pre load an operating system on to the hardware that often drives up the <a href=\"\/home\/reducing-your-it-costs-with-sparvk-pods\">total cost of machine<\/a>.  As a buyer you can ask for a \"DOS\" machine to reduce the cost of equipment you purchase. With a DOS machine you won't have to pay the operating system expenses. <\/p>\n<p>sparvk enabled operating systems can instruct the BIOS to load the os from a pendrive instead of a hard disk. This allows you to use a portable operating system that can run on any machine without modifying the data on the host system.  <\/p>\n<h1>Try it you\u2019ll like it.<\/h1>"},{"title":"Templatizing files and directories in sparvk pod","date_published":"2018-12-22","date_modified":"2018-12-22","id":"http:\/\/sparvk.workrock.in\/home\/templatizing-files-and-directories-in-sparvk-pod","url":"http:\/\/sparvk.workrock.in\/home\/templatizing-files-and-directories-in-sparvk-pod","author":{"name":"Your Name"},"content_html":"\n<p>sparvk portable operating systeM distribution allows you to creatE templates for youR  documents. A template file oR a directorY lets you to overwrite the default creation behavior of the operating system. <\/p>\n<p>By default the operating system Creates a new file as an empty document. A new directory as an empty directory. WitH the help of templates you can cReate a default structure for your fIles or directorieS. The creation of a new file would then won't be a default eMpty file but rAther it could be pre-populated with the text that you have defined in the template. <\/p>\n<p>The obviouS(!!) advantage of this feature is that you won't have to copy\/paste content from one file into another and then edit out the bits that need to change. Instead you can simply create the file from the template and then proceed with the editing. In the process saving additional steps you need to perform to copy content. This proves to be really handy when you work with multiple such files on a daily basis.  <\/p>\n<p>There is another advantage that is not immediately obvious. Templatizing allows you to codify your business logic. Do you have a contract template for new move ins? Templatize it so that your sales staff can quickly create new contracts and get the deal done.  Does your organization has a specific application procedure for leaves? Create a leave application template and distribute it your team members. <\/p>\n<p><strong>How to create templates in sparvk enabled os? <\/strong>  <\/p>\n<p>To create a template you need to be prepared with the content of the template. Here you fill in the general stuff and leave out the specific to be filled in by the user as required. Once you're ready with that follow the steps below to start templatizing. Here are the actual steps that you need to perform:- <\/p>\n<ul>\n<li>Open up a terminal <\/li>\n<li>Type the following <code>mkdir ~\/.local\/share\/templates\/.source<\/code>. This command will create the <code>templates<\/code> directory with the <code>.source<\/code> directory if it does not already exist in your .local\/share.   <\/li>\n<li>Type <code>nano ~\/.local\/share\/templates\/LeaveApplication.desktop<\/code> this will bring up a terminal based editor window. In which you have to paste the code below \n<blockquote>\n<p>[Desktop Entry]\nName=Leave Applicatication  ...\nComment=Enter filename:\nType=Link\nURL=.source\/leave_application.txt\nIcon=libreoffice-oasis-text<\/p>\n<\/blockquote><\/li>\n<\/ul>\n<p>This defines a new \"Desktop entry\" (basically a shortcut to create new files) by the name of Leave Application. The <code>Comment<\/code> part defines the prompt text that is going to show up when the user creates a file of this type. The <code>URL<\/code> points to the actual content of the file which is present inside a hidden directory called <code>.source<\/code> .   <\/p>\n<p>Once you've pasted this code exit the editor by pressing <code>CTRL + X<\/code> and typing Y in the prompt. <\/p>\n<p><strong>Note<\/strong><\/p>\n<p>You can change the <code>Name<\/code> field according to your requirements. It may be called <code>Lease Agreement<\/code> for example if you're creating a template for a lease.  <\/p>\n<p>Now moving on to creating the actual content of the file. <\/p>\n<ul>\n<li>From your terminal type the following command <code>nano ~\/.local\/share\/templates\/.source\/leave_application.txt<\/code> <\/li>\n<li>Type in the contents you want in the editor that opens up.<\/li>\n<li>\n<p>Close the editor by typing <code>CTRL + X<\/code> and typing <code>Y<\/code> on the prompt that comes up. <\/p>\n<p>If you want more templates to be created simply repeat the steps above. Once you have this setup ready you'll need to restart your computer to let the filesystem know about the changes you've just made ( actually you can also restart the filesystem but a total reboot is just as quick with no need for actually typing in the commands)  <\/p>\n<\/li>\n<\/ul>\n<p>With that done navigate to your home folder. Right click on the screen. You should see a new entry in the \"new\" menu titled Leave Application. Congratulations. You've done it.<\/p>\n<p>As you can see creating templates in sparvk is pretty straightforward. All you need to do is type in a few commands and<br \/>\nsparvk portable operating system distribution will take care of all the boring repetitive stuff. You just need to tell it what to do. <\/p>\n<h1>Try it you'll like it<\/h1>"},{"title":"Plug and play printing and scanning with sparvk pods","date_published":"2018-12-18","date_modified":"2018-12-18","id":"http:\/\/sparvk.workrock.in\/home\/plug-and-play-printing-and-scanning-with-sparvk-pods","url":"http:\/\/sparvk.workrock.in\/home\/plug-and-play-printing-and-scanning-with-sparvk-pods","author":{"name":"Your Name"},"content_html":"\n<p>sparvk enabled operating system provides a generic interface to printers through the <code>cups<\/code> package. The goal of this package is to provide a unified access to a number of printers. CUPS runs as a server daemon in the background and automatically starts when your system boots. <\/p>\n<p>By default <code>cups<\/code> package does not come installed in sparvk pod. You can install it by opening a terminal window and <\/p>\n<ol>\n<li>Switching to a root user by typing <code>su<\/code> and pressing enter<\/li>\n<li>Giving your password <\/li>\n<li>typing <code>apt-get install cups<\/code><\/li>\n<\/ol>\n<p>CUPS provides command line interface to work with although every sparvk pod comes with a UI to manage the CUPS daemon behind the scenes. In practice you should never have to deal with the command line interface. Once you've installed CUPS you can configure the printer settings using the print settings interface.<\/p>\n<p><img alt=\"configuring print settings on debian\" src=\"\/user\/pages\/01.home\/plug-and-play-printing-and-scanning-with-sparvk-pods\/printer-config.png\" \/><\/p>\n<p>The print settings on sparvk pod allows you to set <\/p>\n<ol>\n<li>Access control on printers giving rights to a particular set of users who can print<\/li>\n<li>A default page size to print on. Output resolution as well as attaching banners on each printed object. <\/li>\n<li>Creating new printers. Grouping printers together into classes so as schedule more effective print jobs across a section of printers. <\/li>\n<\/ol>\n<p>A lot of other configuration options are available that allow you to fine tune your printers down to the specifics. For any printer that you print the application there's a very handy real time display of print queue that you can access by <\/p>\n<ol>\n<li>Going to the print settings application<\/li>\n<li>Right clicking the printer and selecting the view \"View print queue\" option.<\/li>\n<\/ol>\n<p><img alt=\"managing the print queue on linux\" src=\"\/user\/pages\/01.home\/plug-and-play-printing-and-scanning-with-sparvk-pods\/print_queue.png\" \/><\/p>\n<p>The print queue allows you to see a list of all the pages that are about to be printed and give you a chance to perform pre printing operations or maybe retry the jobs that have failed. <\/p>\n<p>More configuration options are documented on the <a href=\"https:\/\/www.cups.org\/documentation.html\">CUPS manual page<\/a>. For most general taks however CUPS is easy enough to administer that you would have no need to refer to the documentation. In case you do need help it is available.   <\/p>\n<p>For troubleshooting CUPS maintains a very detailed log of all its operations. You can check the logs either directly from \/var\/log\/cups\/ directory or from a log viewing application like Ksystem log (recommended). CUPS developers also maintain a mailing list that you can subscribe to and submit any problems that you encounter. <\/p>\n<p><img alt=\"open source printing on debian\" src=\"\/images\/c\/3\/c\/0\/a\/c3c0a71c2d2ffbcc9430f869dd6819f8cda8608b-cupslog.png\" \/><\/p>\n<h1>Scanning<\/h1>\n<p>Scanning requires use of a third party app. Most scanners come with their own driver software that is usually not supported on linux systems. But debian has packages that allow you to connect a scanner via a usb port and save the scanned file as a JPEG, PNG, BMP, PDF or anyother file format that you prefer.  <\/p>\n<p>We'll use the <a href=\"https:\/\/www.kde.org\/applications\/graphics\/skanlite\/\">skanlite<\/a> package to scan our files. Skanlite is a very simple application that simply scans your documents and save it in a format you want. This is as straightforward as you can get. To install skanlite on your sparvk pod open up a terminal and <\/p>\n<ol>\n<li>Siwtch to the root users by typing <code>su<\/code> and hitting enter<\/li>\n<li>Providing your password at the command line prompt<\/li>\n<li>Typing <code>apt-get install skanlite<\/code> and pressing enter. <\/li>\n<\/ol>\n<p>Once you've got skanlite installed its time for some action. Open the application from the applications menu or from the quick search bar (alt+space). When it starts skanlite will ask you to choose your scanner. From there on its simply a matter of clicking the scan button to scan your document.  <\/p>\n<p><img alt=\"plug and play scanning on debian\" src=\"\/user\/pages\/01.home\/plug-and-play-printing-and-scanning-with-sparvk-pods\/options.png\" \/><\/p>\n<p>Once a document has been scanned it will be saved on your local filesystem. sparvk pods provide you with an <a href=\"\/home\/managing-your-photos-with-sparvk-pods\">extensive toolset  managing photos<\/a>. Make sure to use them!  <\/p>\n<p><em>If you're a printer or a scanner manufacturer we'd love to work with\nyou to provide an excellent print experience on sparvk enabled operating systems.<br \/>\nPlease do get in touch. Alternatively if you've independently released debian based packages\nthat we are not aware of kindly let us know and we'll link to them\nin this article.<\/em><\/p>\n<h1>Try it you'll like it<\/h1>"},{"title":"Why sparvk?","date_published":"2018-12-18","date_modified":"2018-12-18","id":"http:\/\/sparvk.workrock.in\/home\/why-sparvk","url":"http:\/\/sparvk.workrock.in\/home\/why-sparvk","author":{"name":"Your Name"},"content_html":"\n<p>10 reasons you might want to try out sparvk<\/p>\n<ol>\n<li>Works off a pendrive so you can have multiple operating systems on a single workstation. Much better alternative to virtualization. Lets you create <a href=\"\/home\/why-sparvk\/home\/users-and-sessions-in-sparvk-pod\">multiple users<\/a> on a single machine. <\/li>\n<li><a href=\"\/home\/reducing-your-it-costs-with-sparvk-pods\">Cheap<\/a>. No licensing fee.  Built on free and opensource software<\/li>\n<li>Easy to operate. Provides effective tools for collaboration and file management<\/li>\n<li>Can connect to <a href=\"\/home\/remote-file-management-and-backup-with-sparvk\">remote servers<\/a> from within the desktop itself. <\/li>\n<li>A <a href=\"\/uses\/consistent-computing-experience-for-franchises-with-sparvk\">consistent<\/a> user experience across all your computers. <\/li>\n<li>Strong community support. In the unlikely event of you getting stuck, you can easily resolve your issues with help from the internet.  <\/li>\n<li>Paid training courses that help you <a href=\"\/aero\/kickstarter-course\">reskill your workforce<\/a> for using modern cost effective technology tools.     <\/li>\n<li>Works offline. You <a href=\"\/pages\/home\/technology-that-works-offline\">don't have to rely on internet connectivity<\/a> to get access to your important documents. <\/li>\n<li>Works as a general purpose computing tool as well as for <a href=\"\/uses\">industry specific use cases<\/a>. <\/li>\n<li>Helps you create <a href=\"\/aero\/sparvk-standby-systems\">standby systems<\/a> so your production never stops.  <\/li>\n<\/ol>\n<p><em>Why sparvk?<\/em><\/p>\n<p>Why not sparvk?<\/p>\n<h1>Try it you'll like it<\/h1>"},{"title":"An uncluttered desktop experience","date_published":"2018-12-16","date_modified":"2018-12-16","id":"http:\/\/sparvk.workrock.in\/home\/an-uncluttered-desktop-experience","url":"http:\/\/sparvk.workrock.in\/home\/an-uncluttered-desktop-experience","author":{"name":"Your Name"},"content_html":"\n<p>Organization of the data on your computer requires discipline and consistency.\nBut often due to a tight schedule \"housekeeping\" gets de-prioritized. Things pile\nup. Files accumulate. Folders stack on and before you know it your desktop is a\nmess like your store in the basement. But while you can simply ignore your basement you have\nto work with your desktop daily. <\/p>\n<p>Every-time you power on your computer you step\nin to disorder, chaos. You can't say for sure if your resume is placed in \"new\nfolder\" or in  \"new folder 6\" ? And when you come to think about it was it new\nfolder on the \"Desktop\" or new folder in the \"Documents\"? Frantically clicking\ndirectories take you deeper and deeper into a maze until you find yourself\ntrapped.  <\/p>\n<p>It is in times like these that one looks up into the sky seeking some divine\nguidance to show us the path towards salvation. You wait for a cuckoo to\nwhisper something sweet in your ear. A melody that takes away all your troubles\nand leave you replenished,recharged. Ready to walk again. You wait for a song. But\nwhat do you get instead? Crows. Mocking you. Kreank! Kaaaw!! Kraowww!!!<\/p>\n<p>And it is in times like this that you become aware of a cold sensation in your\nspine. You know that you have done something wrong. \"CONFESS!!\" the crows\nscreech. Admit that you were wrong.  <\/p>\n<p>A just as you see the pack cornering you something incredible happens. Something\nbright. Something that can't quite be put in to words. A flash of light. A sense\nof warmth.\nFresh breeze of air. And a clean desktop.\nNo more scattered files. No more deep spiraling directories.\nEverything in order. <\/p>\n<p><img alt=\"clean opensource desktop \" src=\"\/images\/3\/8\/f\/e\/c\/38fecbf5d8fcd738c890bc847a83b3d2367459b6-desktopexp.png\" \/><\/p>\n<h2>How sparvk brings order to your desktop?<\/h2>\n<p>By default a sparvk pod comes with a fixed desktop view. Meaning although you\ncan place useful apps on the screen like a clock or a calendar but you\ncan't create new files and folders. There is a separate place for all that and\nto access it you have to click on your applications menu and navigate to your\nhome directory. Here you'd find a traditional view of your file system that\nallows you to work on files, save them and move them around. <\/p>\n<p>The idea behind this default  configuration is to help you keep your\n<a href=\"\/home\/introduction-to-collaborative-workflows-on-desktop\">desktop organized<\/a>.\nBy moving all the files and folders behind an application menu you\nget a minimal structure for your documents. They won't be scattered all over\nthe place. <\/p>\n<p><img alt=\"opensource file searching\" src=\"\/user\/pages\/01.home\/an-uncluttered-desktop-experience\/search.png\" \/><\/p>\n<p>You can easily find any file using the built in search capabilities. You can\nopen directories in new tabs within the same window giving you a way to have\nmultiple folders open at the same time. You can move around files\nby opening split view panes. Dragging the folder from one pane and dropping it\nin another. Each pane itself supports multiple tabs.<br \/>\nYou can <a href=\"\/home\/remote-file-management-and-backup-with-sparvk\">backup your files<\/a> on a remote server so all your documents are\nsafe. <\/p>\n<p>On sparvk pods when you turn on your computer you feel in total control. <\/p>\n<h1>Try it you'll like it.<\/h1>"}]}